# """
# Django settings for socialnetwork project.

# Generated by 'django-admin startproject' using Django 4.0.3.

# For more information on this file, see
# https://docs.djangoproject.com/en/4.0/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/4.0/ref/settings/
# """

# from pathlib import Path
# import os

# import socket
# import psycopg2
# import dj_database_url


# # from dotenv import load_dotenv
# # load_dotenv()


# DATABASE_URL = os.environ['DATABASE_URL']
# conn = psycopg2.connect(DATABASE_URL, sslmode='require')

# # If the host name starts with 'live', DJANGO_HOST = "production"
# if socket.gethostname().startswith('live'):
#     DJANGO_HOST = "production"
# # Else if host name starts with 'test', set DJANGO_HOST = "test"
# elif socket.gethostname().startswith('test'): 
#     DJANGO_HOST = "testing"
# else:
# # If host doesn't match, assume it's a development server, set DJANGO_HOST = "development"
#     DJANGO_HOST = "development"
# # Define general behavior variables for DJANGO_HOST and all others
# if DJANGO_HOST == "production":
#     DEBUG = False
#     STATIC_URL = 'https://infinite-ravine-34596.herokuapp.com/'
# else:
#     DEBUG = True
#     STATIC_URL = '/static/'




# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent

# YOUR_DOMAIN = "http://localhost:8000" 


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = str(os.getenv('SECRET_KEY'))
# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = str(os.getenv('GOOGLE_KEY'))
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = str(os.getenv('GOOGLE_SECRET'))

# STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY') 
# STRIPE_PUBLISHABLE_KEY = os.environ.get('STRIPE_PUBLISHABLE_KEY') 


# # SECURITY WARNING: don't run with debug turned on in production!
# # DEBUG = True

# ALLOWED_HOSTS = [
#     'supportresources.herokuapp.com'
# ]



# # Application definition

# INSTALLED_APPS = [
   
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
    
#     'social_django',
#     # 'django_extentions',
    
#     'allauth',
#     'allauth.account',
#     'allauth.socialaccount',
#     'allauth.socialaccount.providers.google',
    
    
#     # 'payments.apps.PaymentsConfig',
#     #Apps
#     'main_app',
#     'payments',
#     # 'members',
#     'django_bootstrap_icons',
#     # 'bootstrap_modal_forms',
#     'bootstrap',
#     'fontawesome',
    
    
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'socialnetwork.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': ['/www/STORE/main_app/templates/',],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'socialnetwork.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'socialnetwork',
#     }
# }


# DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)


# # Password validation
# # https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/4.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/4.0/howto/static-files/

# STATIC_URL = 'static/'
# # STATICFILES_DIRS = [BASE_DIR / 'static']

# # STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')] 

# PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
# STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')



# MEDIA_URL = '/media/'

# # Default primary key field type
# # https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# LOGIN_URL = '/login/'
# # LOGOUT_URL = 'logout'

# LOGIN_REDIRECT_URL= 'home'
# LOGOUT_REDIRECT_URL= 'home'


# AUTHENTICATION_BACKENDS=['social_core.backends.google.GoogleOAuth2',
#                      'django.contrib.auth.backends.ModelBackend',
#                      'allauth.account.auth_backends.AuthenticationBackend',
# ]

# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'SCOPE': [
#             'profile',
#             'email',
#         ],
#         'AUTH_PARAMS': {
#             'access_type': 'online',
#         }
#     }
# }


# STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY') 
# STRIPE_PUBLISHABLE_KEY = os.environ.get('STRIPE_PUBLISHABLE_KEY') 
# # STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY') 
# # STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY')   

# # if you have an application deployed, you should specify the path of the dot env on the settings file like so:

# # import os
# # from dotenv import load_dotenv
# # dotenv_path = os.path.join(os.path.dirname(__file__), '.env')
# # load_dotenv(dotenv_path)